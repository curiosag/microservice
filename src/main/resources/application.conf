# Redis configuration
redis {
  host = "localhost"
  port = 6379
}

akka {
  log-dead-letters = off
  actor {
        serializers {
            java = "akka.serialization.JavaSerializer"
            nonSerializer = "nano.ingredients.akka.NonSerializer"
            # proto = "akka.remote.serialization.ProtobufSerializer"
        }
        serialization-bindings {
              "java.lang.Object" = java
            }
    serialize-messages = off
    serialize-creators = off
  }
}

akka.persistence {
  max-concurrent-recoveries = 7

  internal-stash-overflow-strategy = "Akka.Persistence.ThrowExceptionConfigurator, Akka.Persistence"
  journal {
    #plugin = "akka-persistence-redis.journal"
    plugin = "akka.persistence.journal.inmem"
    auto-start-journals = []
  }
  snapshot-store {
    #akka.persistence.snapshot-store.plugin = "akka-persistence-redis.snapshot"
    #plugin = "akka.persistence.snapshot-store.local"
    #auto-start-snapshot-stores = []
  }
 # no-snapshot-store {
 #   class = "Akka.Persistence.Snapshot.NoSnapshotStore, Akka.Persistence"
 # }
  view {
    auto-update = on
    auto-update-interval = 5s
    # Set to -1 for no upper limit.
    auto-update-processingDirective-max = -1
  }
  at-least-once-delivery {
    redeliver-interval = 5s
    redelivery-burst-limit = 1000
    warn-after-number-of-unconfirmed-attempts = 5
    max-unconfirmed-messages = 100000
  }
  # Default persistent extension thread pools.
  dispatchers {
    default-plugin-dispatcher {
      type = PinnedDispatcher
      executor = "fork-join-executor"
    }
    default-processingDirective-dispatcher {
      type = ForkJoinDispatcher
      executor = "fork-join-executor"
      dedicated-thread-pool {
        thread-count = 8
      }
    }
    default-stream-dispatcher {
      type = ForkJoinDispatcher
      dedicated-thread-pool {
        thread-count = 8
      }
    }
  }
}