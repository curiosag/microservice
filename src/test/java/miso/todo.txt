Temporary Application Id:-47X4A554ZJY33EB

whatsapp +919444749335

dezember burma, feb nilambe


Closures und Namensraum für Werte? Lambdas funktionieren so, daß richtig benannte werte bis zu lambda L durchgereicht werden,
L muß dann das als formalen parameter haben

mapping formale/aktuelle parameter

Lambdas als Werte in partial function application??

Mit der push/pop partial application params Logik müssen die messages in der Reihenfolge eintreffen,
in der sie abgesendet wurden.

TODOs
- partially applied values rein kriegen vor den anderen?
- consts und states -> const propagation erzeugt anderen state als andere messages
- function calls/signature mit mehreren params und consts


<739>(0/1){FilterJava-11(FILTER LEFT)} !! {FunctionCall-16(filterCallLeft)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecb8
<740>(0/1){FunctionCall-16(filterCallLeft)} !! {FunctionCall-16(filterCallLeft)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecb8
<741>(0/1){FilterJava-11(FILTER LEFT)} <-- {FunctionCall-16(filterCallLeft)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecb8
<742>(0/1){FunctionCall-16(filterCallLeft)} !! {FunctionCall-16(filterCallLeft)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecb8
<742>(0/1){FunctionCall-16(filterCallLeft)} <-- {FunctionCall-16(filterCallLeft)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecb8
<743>(0/1){FilterJava-11(FILTER LEFT)} <-- {FunctionCall-16(filterCallLeft)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecb8
<744>(0/1){FunctionCall-16(filterCallLeft)} <-- {FunctionCall-16(filterCallLeft)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecb8
<891>(0/1){FilterJava-13(FILTER RIGHT)} !! {FunctionCall-19(filterCallRight)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecbb
<893>(0/1){FilterJava-13(FILTER RIGHT)} !! {FunctionCall-19(filterCallRight)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecbb
<895>(0/1){FilterJava-13(FILTER RIGHT)} !! {FunctionCall-19(filterCallRight)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecbb
<897>(0/1){FilterJava-13(FILTER RIGHT)} !! {FunctionCall-19(filterCallRight)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecbb
<899>(0/1){FilterJava-13(FILTER RIGHT)} !! {FunctionCall-19(filterCallRight)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecbb
<901>(0/1){FilterJava-13(FILTER RIGHT)} !! {FunctionCall-19(filterCallRight)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecbb
<744>(0/1){FunctionCall-16(filterCallLeft)} !! {FunctionCall-16(filterCallLeft)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecb8
<903>(0/1){FilterJava-13(FILTER RIGHT)} !! {FunctionCall-19(filterCallRight)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecbb
<905>(0/1){FilterJava-13(FILTER RIGHT)} !! {FunctionCall-19(filterCallRight)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecbb
<746>(0/1){FunctionCall-16(filterCallLeft)} <-- {FunctionCall-16(filterCallLeft)}  predicate:miso.ingredients.PartialFunctionApplication@2ad3ecb8